{"version":3,"sources":["auth/AuthContext.js","categories/CategoriesContext.js","helpers/getPlaylists.js","Playlist/PlaylistsContext.js","types/types.js","components/CategoryCard.js","hooks/useFetchPlaylists.js","helpers/getAuthToken.js","helpers/getCategories.js","hooks/useFetchCategories.js","components/CategoryContainer.js","components/ui/Footer.js","components/MainScreen.js","components/NotSelected.js","songs/SongsContext.js","helpers/getSongs.js","hooks/useFetchSongs.js","components/ui/Button.js","components/Playlist.js","components/PlaylistsContainer.js","components/Loading.js","components/SongList.js","components/SongsContainer.js","components/PlaylistsScreen.js","helpers/getAccessToken.js","helpers/addSong.js","components/SongScreen.js","helpers/getArtistsString.js","router/AppRouter.js","Playlist/playlistsReducer.js","categories/categoriesReducer.js","auth/authReducer.js","songs/songsReducer.js","MusicApp.js","index.js"],"names":["AuthContext","createContext","CategoryContext","getPlaylistByCategory","token","category_id","a","signal","AbortController","fetch","method","headers","res","json","undefined","playlists","items","console","log","PlaylistsContext","types","CategoryCard","name","imgUrl","id","categoriesDispatch","useContext","authState","history","useHistory","getPlaylists","playlistDispatch","abortController","data","type","payload","abort","useFetchPlaylists","onClick","push","className","style","backgroundImage","getAuthToken","btoa","client_id","body","access_token","localStorage","setItem","getCategories","categories","setToken","CategoryContainer","authDispatch","useFetchCategories","categoriesState","slice","map","icons","url","Footer","href","target","rel","src","alt","MainScreen","NotSelected","SongsContext","getSongs","playlist_id","songs","forEach","song","track","album","artists","setSongs","Button","value","songsDispatch","useFetchSongs","Playlist","description","tracks","total","PlaylistsContainer","activeCategory","playlistsState","Loading","SongList","index","categoryId","to","SongsContainer","songsState","songsIsLoading","useEffect","i","PlaylistsScreen","isSelected","getAccessToken","process","Authorization","addSong","songId","encode","encodeURIComponent","Swal","fire","SongScreen","activeSong","images","albumName","release_date","songArtists","myArtistsArray","artist","join","getArtistsString","AppRouter","exact","path","component","playlistsReducer","state","action","activePlaylistId","categoriesReducer","authReducer","songsReducer","init","initCategories","initAuth","initSongs","MusicApp","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dc35e7f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();\n","import { createContext } from 'react';\n\nexport const CategoryContext = createContext();\n","const base_URL = 'https://api.spotify.com/v1/browse/categories';\n\nexport const getPlaylistByCategory = async (token, category_id) => {\n\ttry {\n\t\tconst limit = 5;\n\t\tconst signal = AbortController.signal;\n\n\t\tconst res = await fetch(\n\t\t\t`${base_URL}/${category_id}/playlists?limit=${limit}`,\n\t\t\t{\n\t\t\t\tsignal: signal,\n\t\t\t\tmethod: 'GET',\n\t\t\t\t//prettier-ignore\n\t\t\t\theaders: { \n                    'Authorization': `Bearer ${token}`,\n                \n                },\n\t\t\t}\n\t\t);\n\n\t\tconst { playlists } = await res.json();\n\n\t\tif (playlists === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn playlists.items;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import { createContext } from 'react';\n\nexport const PlaylistsContext = createContext();\n","export const types = {\n\tSetToken: '[auth] get token',\n\n\tsetCategories: '[categories] set lists of categories',\n\tgetCategories: '[categories] get lists of categories',\n\tsetActiveCategory: '[categories] set active category',\n\n\tgetPlaylists: '[playlists] get lists of playlists',\n\tgetSongs: '[playlists] get songs in playlist',\n\tsetActivePlaylist: '[playlists] set active playlist',\n\tsetPlaylists: '[playlists] set playlists',\n\tclearPlaylists: '[playlists] clear playlists',\n\tdeactivateSelected: '[playlists] deactivate selected',\n\n\tsetSongs: '[songs] set songs',\n\tsetActiveSong: '[songs] set active song',\n\tsongsIsLoading: '[songs] songs is loading',\n\tsongsEndLoading: '[songs] songs finish loading',\n\tclearSongs: '[songs] clear songs',\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\nimport { CategoryContext } from '../categories/CategoriesContext';\nimport { useFetchPlaylists } from '../hooks/useFetchPlaylists';\nimport { types } from '../types/types';\n\nexport const CategoryCard = ({ name, imgUrl, id }) => {\n\tconst { categoriesDispatch } = useContext(CategoryContext);\n\tconst { authState } = useContext(AuthContext);\n\tconst { token } = authState;\n\tconst history = useHistory();\n\n\tconst getPlaylists = useFetchPlaylists(token, id);\n\n\tconst handleClick = () => {\n\t\tgetPlaylists();\n\t\tcategoriesDispatch({\n\t\t\ttype: types.setActiveCategory,\n\t\t\tpayload: {\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t},\n\t\t});\n\t\thistory.push(`/playlists/${id}`);\n\t};\n\treturn (\n\t\t<div\n\t\t\tonClick={handleClick}\n\t\t\tclassName='category-card hvr-grow'\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(\"${imgUrl}\")`,\n\t\t\t}}\n\t\t>\n\t\t\t<h2>{name}</h2>\n\t\t</div>\n\t);\n};\n","import { useContext } from 'react';\nimport { getPlaylistByCategory } from '../helpers/getPlaylists';\nimport { PlaylistsContext } from '../Playlist/PlaylistsContext';\nimport { types } from '../types/types';\n\nexport const useFetchPlaylists = (token, category_id) => {\n\tconst { playlistDispatch } = useContext(PlaylistsContext);\n\tconst abortController = new AbortController();\n\n\treturn async () => {\n\t\ttry {\n\t\t\tconst data = await getPlaylistByCategory(token, category_id);\n\t\t\tplaylistDispatch({\n\t\t\t\ttype: types.setPlaylists,\n\t\t\t\tpayload: [...data],\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tabortController.abort();\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n","const client_id = process.env.REACT_APP_CLIENT_ID;\nconst client_secret = process.env.REACT_APP_CLIENT_SECRET;\n\nexport const getAuthToken = async () => {\n\tconst res = await fetch(`https://accounts.spotify.com/api/token`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/x-www-form-urlencoded',\n\t\t\t//prettier-ignore\n\t\t\t'Authorization': 'Basic ' + btoa(client_id + ':' + client_secret),\n\t\t},\n\t\tbody: 'grant_type=client_credentials',\n\t});\n\n\tconst { access_token: token } = await res.json();\n\tlocalStorage.setItem('authToken', token);\n\n\treturn token;\n};\n","import { getAuthToken } from './getAuthToken';\n\nconst categories_URL = `https://api.spotify.com/v1/browse/categories`;\n\nexport const getCategories = async () => {\n\tconst token = await getAuthToken();\n\tconst signal = AbortController.signal;\n\tconst res = await fetch(categories_URL, {\n\t\tsignal: signal,\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t//prettier-ignore\n\t\t\t'Authorization': `Bearer ${token}`,\n\t\t},\n\t});\n\n\tconst { categories } = await res.json();\n\n\treturn { token, categories: categories.items };\n};\n","import { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { CategoryContext } from '../categories/CategoriesContext';\nimport { getCategories } from '../helpers/getCategories';\nimport { types } from '../types/types';\n\nexport const useFetchCategories = () => {\n\tconst { categoriesDispatch } = useContext(CategoryContext);\n\tconst { authDispatch } = useContext(AuthContext);\n\n\treturn async () => {\n\t\ttry {\n\t\t\tconst data = await getCategories();\n\n\t\t\tauthDispatch(setToken(data.token));\n\t\t\tcategoriesDispatch({\n\t\t\t\ttype: types.setCategories,\n\t\t\t\tpayload: data.categories,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nconst setToken = (token) => ({\n\ttype: types.SetToken,\n\tpayload: token,\n});\n","import React, { useContext } from 'react';\nimport { CategoryCard } from './CategoryCard';\nimport { useFetchCategories } from '../hooks/useFetchCategories';\nimport { CategoryContext } from '../categories/CategoriesContext';\n\nexport const CategoryContainer = () => {\n\t//get categories\n\tconst getCategories = useFetchCategories();\n\tgetCategories();\n\tconst { categoriesState } = useContext(CategoryContext);\n\tconst { categories } = categoriesState;\n\n\treturn (\n\t\t<div className='category-container'>\n\t\t\t{\n\t\t\t\t// prettier/ignore\n\t\t\t\tcategories.slice(12).map(({ name, id, icons }) => (\n\t\t\t\t\t<CategoryCard\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\timgUrl={icons[0].url}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nexport const Footer = () => {\n\treturn (\n\t\t<footer className='footer'>\n\t\t\t<a href='https://github.com/AlejoVE' target='_blank' rel='noreferrer'>\n\t\t\t\t<img\n\t\t\t\t\tsrc='https://user-images.githubusercontent.com/59319966/109864628-584d4e80-7c63-11eb-9f1a-4afed77758ce.png'\n\t\t\t\t\talt='github logo'\n\t\t\t\t></img>\n\t\t\t</a>\n\t\t\t<p>Alejandro Montilla © 2021</p>\n\t\t</footer>\n\t);\n};\n","import React from 'react';\nimport { CategoryContainer } from './CategoryContainer';\nimport { Footer } from './ui/Footer';\n\nexport const MainScreen = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className='main-container animate__animated animate__fadeIn'>\n\t\t\t\t<div className='header-container'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='header-img'\n\t\t\t\t\t\tsrc='https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_Black.png'\n\t\t\t\t\t\talt='Spotify logo'\n\t\t\t\t\t></img>\n\t\t\t\t</div>\n\t\t\t\t<CategoryContainer />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React from 'react';\n\nexport const NotSelected = () => {\n\treturn (\n\t\t<div className='not-selected-container animate__animated animate__fadeIn'>\n\t\t\t<h2>Please select a Playlist</h2>\n\t\t\t<img\n\t\t\t\tsrc='https://www.freepnglogos.com/uploads/spotify-logo-png/file-spotify-logo-png-4.png'\n\t\t\t\talt='Spotify logo'\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import { createContext } from 'react';\n\nexport const SongsContext = createContext();\n","const base_url = `https://api.spotify.com/v1/playlists`;\n\nexport const getSongs = async (token, playlist_id) => {\n\tconst limit = 100;\n\tconst signal = AbortController.signal;\n\n\ttry {\n\t\tconst res = await fetch(\n\t\t\t`${base_url}/${playlist_id}/tracks?limit=${limit}`,\n\t\t\t{\n\t\t\t\tsignal: signal,\n\t\t\t\tmethod: 'GET',\n\t\t\t\t//prettier-ignore\n\t\t\t\theaders: { 'Authorization': `Bearer ${token}`},\n\t\t\t}\n\t\t);\n\n\t\tconst { items } = await res.json();\n\n\t\tconst songs = [];\n\n\t\titems.forEach((song) => {\n\t\t\tconst { track } = song;\n\t\t\tconst { album, artists, id, name } = track;\n\n\t\t\tsongs.push({ album, artists, id, name });\n\t\t});\n\n\t\treturn songs;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import { useContext } from 'react';\nimport { getSongs } from '../helpers/getSongs';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\n\nexport const useFetchSongs = (token, playlist_id) => {\n\tconst { songsDispatch } = useContext(SongsContext);\n\tconst abortController = new AbortController();\n\n\treturn async () => {\n\t\ttry {\n\t\t\tconst data = await getSongs(token, playlist_id);\n\t\t\tsongsDispatch(setSongs(data));\n\t\t} catch (error) {\n\t\t\tsongsDispatch({ type: types.songsEndLoading });\n\t\t\tabortController.abort();\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nconst setSongs = (songs) => ({\n\ttype: types.setSongs,\n\tpayload: songs,\n});\n","import React, { useContext } from 'react';\nimport { types } from '../../types/types';\nimport { PlaylistsContext } from '../../Playlist/PlaylistsContext';\nimport { SongsContext } from '../../songs/SongsContext';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { useFetchSongs } from '../../hooks/useFetchSongs';\n\nexport const Button = ({ value, id }) => {\n\tconst { songsDispatch } = useContext(SongsContext);\n\tconst { playlistDispatch } = useContext(PlaylistsContext);\n\n\tconst { authState } = useContext(AuthContext);\n\tconst { token } = authState;\n\n\tconst getSongs = useFetchSongs(token, id);\n\n\tconst handleClick = () => {\n\t\tgetSongs();\n\t\tconst action = {\n\t\t\ttype: types.setActivePlaylist,\n\t\t\tpayload: id,\n\t\t};\n\n\t\tplaylistDispatch(action);\n\t\tsongsDispatch({\n\t\t\ttype: types.songsIsLoading,\n\t\t});\n\t\tsongsDispatch({\n\t\t\ttype: types.clearSongs,\n\t\t});\n\t};\n\treturn (\n\t\t<button className='btn hvr-grow' onClick={handleClick}>\n\t\t\t{value}\n\t\t</button>\n\t);\n};\n","import React from 'react';\nimport { Button } from './ui/Button';\n\nexport const Playlist = ({ name, description, tracks, id }) => {\n\treturn (\n\t\t<li className='li-element'>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<em>Number of songs: {tracks.total}</em>\n\t\t\t</div>\n\t\t\t<Button value='See songs >>>' id={id} />\n\t\t</li>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { CategoryContext } from '../categories/CategoriesContext';\nimport { PlaylistsContext } from '../Playlist/PlaylistsContext';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\nimport { Playlist } from './Playlist';\n\nexport const PlaylistsContainer = ({ history }) => {\n\tconst { categoriesState } = useContext(CategoryContext);\n\tconst { activeCategory } = categoriesState;\n\tconst { name } = activeCategory;\n\n\tconst { playlistsState, playlistDispatch } = useContext(PlaylistsContext);\n\tconst { playlists } = playlistsState;\n\n\tconst { songsDispatch } = useContext(SongsContext);\n\n\tconst goBack = () => {\n\t\tplaylistDispatch({\n\t\t\ttype: types.deactivateSelected,\n\t\t});\n\n\t\tsongsDispatch({\n\t\t\ttype: types.clearSongs,\n\t\t});\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<div className='playlists-container '>\n\t\t\t<div className='header'>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t</div>\n\t\t\t<ul className='list'>\n\t\t\t\t{\n\t\t\t\t\t// prettier/ignore\n\t\t\t\t\tplaylists.map(({ id, name, description, tracks }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Playlist\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\tdescription={description}\n\t\t\t\t\t\t\t\ttracks={tracks}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t\t<button className='goBack hvr-grow' onClick={goBack}>\n\t\t\t\t{'< Go back'}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nexport const Loading = () => {\n\treturn (\n\t\t<div className='loading-container'>\n\t\t\t<h2>Loading...</h2>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CategoryContext } from '../categories/CategoriesContext';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\n\nexport const SongList = ({ name, artists, album, id, index }) => {\n\tconst { categoriesState } = useContext(CategoryContext);\n\n\tconst { activeCategory } = categoriesState;\n\tconst { id: categoryId } = activeCategory;\n\n\tconst { songsDispatch } = useContext(SongsContext);\n\tconst history = useHistory();\n\n\tconst setActiveSong = () => {\n\t\tsongsDispatch({\n\t\t\ttype: types.setActiveSong,\n\t\t\tpayload: {\n\t\t\t\tname,\n\t\t\t\tartists,\n\t\t\t\talbum,\n\t\t\t\tid,\n\t\t\t},\n\t\t});\n\n\t\thistory.push(`/playlists/${categoryId}/song`);\n\t};\n\treturn (\n\t\t<li\n\t\t\tclassName='hvr-mine animate__animated animate__fadeIn'\n\t\t\tonClick={setActiveSong}\n\t\t>\n\t\t\t<Link\n\t\t\t\tto={`/playlists/${categoryId}/song`}\n\t\t\t>{`${index}.                ${name}`}</Link>\n\t\t</li>\n\t);\n};\n","import React, { useContext, useEffect } from 'react';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\nimport { Loading } from './Loading';\nimport { SongList } from './SongList';\n\nexport const SongsContainer = () => {\n\tconst { songsState, songsDispatch } = useContext(SongsContext);\n\tconst { songsIsLoading, songs } = songsState;\n\n\tuseEffect(() => {\n\t\tsongsDispatch({\n\t\t\ttype: types.setSongs,\n\t\t\tpayload: songs,\n\t\t});\n\t}, [songsDispatch]);\n\n\treturn (\n\t\t<div className='songs-container'>\n\t\t\t<ul>\n\t\t\t\t{!songsIsLoading ? (\n\t\t\t\t\tsongs.map(({ name, album, artists, id }, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SongList\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\talbum={album}\n\t\t\t\t\t\t\t\tartists={artists}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tindex={i + 1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<Loading />\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { PlaylistsContext } from '../Playlist/PlaylistsContext';\nimport { NotSelected } from './NotSelected';\nimport { PlaylistsContainer } from './PlaylistsContainer';\nimport { SongsContainer } from './SongsContainer';\n\nexport const PlaylistsScreen = ({ history }) => {\n\tconst { playlistsState } = useContext(PlaylistsContext);\n\tconst { isSelected } = playlistsState;\n\n\treturn (\n\t\t<>\n\t\t\t<div className='playlists-screen-container'>\n\t\t\t\t<PlaylistsContainer history={history} />\n\n\t\t\t\t{!isSelected ? <NotSelected /> : <SongsContainer />}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","const refresh_token = process.env.REACT_APP_REFRESH_TOKEN;\nconst basic_encoded = process.env.REACT_APP_ENCODED_CLIENT_ID_CLIENT_SECRET;\n\nexport const getAccessToken = async () => {\n\ttry {\n\t\tconst res = await fetch('https://accounts.spotify.com/api/token', {\n\t\t\tbody: `grant_type=refresh_token&refresh_token=${refresh_token}`,\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Basic ${basic_encoded}`,\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t});\n\t\tconst data = await res.json();\n\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import Swal from 'sweetalert2';\nimport { getAccessToken } from './getAccessToken';\n\nconst base_url = 'https://api.spotify.com/v1/playlists/4qhYOIILXPZGcwOAOd9Vt6/';\n\nexport const addSong = async (songId) => {\n\tconst data = await getAccessToken();\n\tconst { access_token } = data;\n\n\tconst encode = encodeURIComponent(`spotify:track:${songId}`);\n\ttry {\n\t\tawait fetch(`${base_url}tracks?uris=${encode}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t//prettier-ignore\n\t\t\t\t'Authorization': `Bearer ${access_token}`,\n\t\t\t},\n\t\t});\n\n\t\tSwal.fire('Good choice!', 'Check your playlist ;)', 'success');\n\t} catch (error) {\n\t\tSwal.fire('Error', 'Sorry, there was an error, try later', 'error');\n\t\tconsole.log(error);\n\t}\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SongsContext } from '../songs/SongsContext';\nimport { addSong } from '../helpers/addSong';\nimport { getArtistsString } from '../helpers/getArtistsString';\nimport { Footer } from './ui/Footer';\nimport { CategoryContext } from '../categories/CategoriesContext';\n\nexport const SongScreen = () => {\n\tconst history = useHistory();\n\n\tconst { categoriesState } = useContext(CategoryContext);\n\tconst { activeCategory } = categoriesState;\n\tconst { id: categoryId } = activeCategory;\n\tconst { songsState } = useContext(SongsContext);\n\tconst { activeSong } = songsState;\n\tconst { album, id, name, artists } = activeSong;\n\tconst { images, name: albumName } = album;\n\tconst { release_date } = album;\n\n\tconst songArtists = getArtistsString(artists);\n\n\tconst goBack = () => {\n\t\thistory.push(`/playlists/${categoryId}`);\n\t};\n\n\tconst handleAddSong = () => {\n\t\taddSong(id);\n\t};\n\n\treturn (\n\t\t<div className='song-screen-container animate__animated animate__fadeInLeft animate__faster'>\n\t\t\t<div className='song-card-container '>\n\t\t\t\t<img src={`${images[0].url}`} alt='Album cover'></img>\n\t\t\t\t<div className='song-description-container'>\n\t\t\t\t\t<div className='song-header'>\n\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Artists: {songArtists}</li>\n\t\t\t\t\t\t<li>Album: {albumName}</li>\n\t\t\t\t\t\t<li>Release date: {release_date}</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<div className='buttons-container'>\n\t\t\t\t\t\t<button className='go-back hvr-grow' onClick={goBack}>\n\t\t\t\t\t\t\t{'< Go back'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='button hvr-grow' onClick={handleAddSong}>\n\t\t\t\t\t\t\tAdd song to Playlist\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n","export const getArtistsString = (artists) => {\n\tconst myArtistsArray = [];\n\n\tartists.forEach((artist) => myArtistsArray.push(artist.name));\n\tconst artistsString = myArtistsArray.join(', ');\n\treturn artistsString;\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { MainScreen } from '../components/MainScreen';\nimport { PlaylistsScreen } from '../components/PlaylistsScreen';\nimport { SongScreen } from '../components/SongScreen';\n\nexport const AppRouter = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/main' component={MainScreen} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/playlists/:name'\n\t\t\t\t\t\tcomponent={PlaylistsScreen}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/playlists/:name/song'\n\t\t\t\t\t\tcomponent={SongScreen}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path='/' component={MainScreen} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n","import { types } from '../types/types';\n\nexport const playlistsReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.setActivePlaylist:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactivePlaylistId: action.payload,\n\t\t\t\tisSelected: true,\n\t\t\t};\n\n\t\tcase types.deactivateSelected:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSelected: false,\n\t\t\t};\n\n\t\tcase types.setPlaylists:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaylists: [...action.payload],\n\t\t\t};\n\n\t\tcase types.clearPlaylists:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaylists: [],\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { types } from '../types/types';\n\nexport const categoriesReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.setCategories:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.payload],\n\t\t\t};\n\n\t\tcase types.setActiveCategory:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveCategory: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.SetToken:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { types } from '../types/types';\n\nexport const songsReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.setSongs:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongs: [...action.payload],\n\t\t\t\tsongsIsLoading: false,\n\t\t\t};\n\n\t\tcase types.songsIsLoading:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongsIsLoading: true,\n\t\t\t};\n\n\t\tcase types.setActiveSong:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveSong: action.payload,\n\t\t\t};\n\n\t\tcase types.clearSongs:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongs: [],\n\t\t\t};\n\n\t\tcase types.songsEndLoading:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongsIsLoading: false,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React, { useReducer } from 'react';\n\nimport { AppRouter } from './router/AppRouter';\nimport { PlaylistsContext } from './Playlist/PlaylistsContext';\nimport { playlistsReducer } from './Playlist/playlistsReducer';\nimport { categoriesReducer } from './categories/categoriesReducer';\nimport { authReducer } from './auth/authReducer';\nimport { CategoryContext } from './categories/CategoriesContext';\nimport { AuthContext } from './auth/AuthContext';\nimport { songsReducer } from './songs/songsReducer';\nimport { SongsContext } from './songs/SongsContext';\n\nconst init = () => {\n\treturn { activePlaylistId: '', isSelected: false, playlists: [] };\n};\n\nconst initCategories = () => {\n\treturn { activeCategory: '', categories: [] };\n};\n\nconst initAuth = () => {\n\treturn { token: '' };\n};\n\nconst initSongs = () => {\n\treturn { songs: [], songsIsLoading: true, activeSong: {} };\n};\n\nexport const MusicApp = () => {\n\tconst [playlistsState, playlistDispatch] = useReducer(\n\t\tplaylistsReducer,\n\t\t{},\n\t\tinit\n\t);\n\tconst [categoriesState, categoriesDispatch] = useReducer(\n\t\tcategoriesReducer,\n\t\t{},\n\t\tinitCategories\n\t);\n\n\tconst [authState, authDispatch] = useReducer(authReducer, {}, initAuth);\n\n\tconst [songsState, songsDispatch] = useReducer(songsReducer, {}, initSongs);\n\treturn (\n\t\t<AuthContext.Provider value={{ authState, authDispatch }}>\n\t\t\t<SongsContext.Provider value={{ songsState, songsDispatch }}>\n\t\t\t\t<CategoryContext.Provider\n\t\t\t\t\tvalue={{ categoriesState, categoriesDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PlaylistsContext.Provider\n\t\t\t\t\t\tvalue={{ playlistsState, playlistDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AppRouter />\n\t\t\t\t\t</PlaylistsContext.Provider>\n\t\t\t\t</CategoryContext.Provider>\n\t\t\t</SongsContext.Provider>\n\t\t</AuthContext.Provider>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport { MusicApp } from './MusicApp';\n\nReactDOM.render(<MusicApp />, document.getElementById('root'));\n"],"sourceRoot":""}