{"version":3,"sources":["categories/CategoriesContext.js","types/types.js","components/CategoryCard.js","auth/AuthContext.js","helpers/getAuthToken.js","helpers/getCategories.js","hooks/useFetchCategories.js","components/CategoryContainer.js","components/ui/Footer.js","components/MainScreen.js","Playlist/PlaylistsContext.js","components/NotSelected.js","helpers/getPlaylists.js","songs/SongsContext.js","components/ui/Button.js","components/Playlist.js","components/PlaylistsContainer.js","hooks/useFetchPlaylists.js","helpers/getSongs.js","hooks/useFetchSongs.js","components/SongList.js","components/SongsContainer.js","components/PlaylistsScreen.js","helpers/getAccessToken.js","helpers/addSong.js","components/SongScreen.js","helpers/getArtistsString.js","router/AppRouter.js","Playlist/playlistsReducer.js","categories/categoriesReducer.js","auth/authReducer.js","songs/songsReducer.js","MusicApp.js","index.js"],"names":["CategoryContext","createContext","types","CategoryCard","name","imgUrl","id","categoriesDispatch","useContext","className","style","backgroundImage","onClick","localStorage","setItem","type","payload","to","AuthContext","getAuthToken","a","fetch","method","headers","btoa","client_id","body","res","json","token","access_token","getCategories","categories","items","setToken","CategoryContainer","useState","state","setState","authDispatch","useEffect","then","data","useFetchCategories","slice","map","icons","url","Footer","href","target","rel","src","alt","MainScreen","PlaylistsContext","NotSelected","getPlaylistByCategory","category_id","undefined","playlists","console","log","SongsContext","Button","value","playlistDispatch","Playlist","description","tracks","total","PlaylistsContainer","history","authState","songsDispatch","myCategory","activeCategory","categoryId","getItem","categoryName","useFetchPlaylists","push","getSongs","playlist_id","songs","forEach","song","track","album","artists","setSongs","SongList","index","useHistory","replace","SongsContainer","activePlaylistId","playlistsState","useFetchSongs","songsState","songsIsLoading","i","PlaylistsScreen","isSelected","getAccessToken","process","Authorization","addSong","songId","encode","encodeURIComponent","Swal","fire","SongScreen","activeSong","images","albumName","release_date","songArtists","myArtistsArray","artist","join","getArtistsString","AppRouter","exact","path","component","playlistsReducer","action","categoriesReducer","authReducer","songsReducer","init","initCategories","initAuth","initSongs","MusicApp","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6b4b32f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const CategoryContext = createContext();\n","export const types = {\n\tSetToken: '[auth] get token',\n\n\tsetCategories: '[categories] set lists of categories',\n\tgetCategories: '[categories] get lists of categories',\n\tsetActiveCategory: '[categories] set active category',\n\n\tgetPlaylists: '[playlists] get lists of playlists',\n\tgetSongs: '[playlists] get songs in playlist',\n\tsetActivePlaylist: '[playlists] set active playlist',\n\tdeactivateSelected: '[playlists] deactivate selected',\n\n\tsetSongs: '[songs] set songs',\n\tsetActiveSong: '[songs] set active song',\n\tsongsIsLoading: '[songs] songs is loading',\n\tclearSongs: '[songs] clear songs',\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CategoryContext } from '../categories/CategoriesContext';\nimport { types } from '../types/types';\n\nexport const CategoryCard = ({ name, imgUrl, id }) => {\n\tconst { categoriesDispatch } = useContext(CategoryContext);\n\n\tconst handleClick = () => {\n\t\tlocalStorage.setItem('categoryId', id);\n\t\tlocalStorage.setItem('categoryName', name);\n\t\tcategoriesDispatch({\n\t\t\ttype: types.setActiveCategory,\n\t\t\tpayload: {\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t},\n\t\t});\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName='category-card hvr-grow'\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(\"${imgUrl}\")`,\n\t\t\t}}\n\t\t>\n\t\t\t<h2>{name}</h2>\n\t\t\t<Link onClick={handleClick} className='link' to={`/playlists/${id}`}>\n\t\t\t\tMore...\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext();\n","const client_id = process.env.REACT_APP_CLIENT_ID;\nconst client_secret = process.env.REACT_APP_CLIENT_SECRET;\n\nexport const getAuthToken = async () => {\n\tconst res = await fetch(`https://accounts.spotify.com/api/token`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/x-www-form-urlencoded',\n\t\t\t//prettier-ignore\n\t\t\t'Authorization': 'Basic ' + btoa(client_id + ':' + client_secret),\n\t\t},\n\t\tbody: 'grant_type=client_credentials',\n\t});\n\n\tconst { access_token: token } = await res.json();\n\tlocalStorage.setItem('authToken', token);\n\n\treturn token;\n};\n","import { getAuthToken } from './getAuthToken';\n\nconst categories_URL = `https://api.spotify.com/v1/browse/categories`;\n\nexport const getCategories = async () => {\n\tconst token = await getAuthToken();\n\tconst res = await fetch(categories_URL, {\n\t\tmethod: 'GEt',\n\t\theaders: {\n\t\t\t//prettier-ignore\n\t\t\t'Authorization': `Bearer ${token}`,\n\t\t},\n\t});\n\n\tconst { categories } = await res.json();\n\n\treturn { token, categories: categories.items };\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { getCategories } from '../helpers/getCategories';\nimport { types } from '../types/types';\n\nexport const useFetchCategories = () => {\n\tconst [state, setState] = useState({\n\t\tcategories: [],\n\t});\n\n\tconst { authDispatch } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tgetCategories().then((data) => {\n\t\t\tauthDispatch(setToken(data.token));\n\t\t\tsetState({\n\t\t\t\tcategories: [...data.categories],\n\t\t\t});\n\t\t});\n\t}, [authDispatch]);\n\n\treturn state;\n};\n\nconst setToken = (token) => ({\n\ttype: types.SetToken,\n\tpayload: token,\n});\n","import React from 'react';\nimport { CategoryCard } from './CategoryCard';\nimport { useFetchCategories } from '../hooks/useFetchCategories';\n\nexport const CategoryContainer = () => {\n\tconst { categories } = useFetchCategories();\n\n\treturn (\n\t\t<div className='category-container'>\n\t\t\t{\n\t\t\t\t// prettier/ignore\n\t\t\t\tcategories.slice(12).map(({ name, id, icons }) => (\n\t\t\t\t\t<CategoryCard\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\timgUrl={icons[0].url}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nexport const Footer = () => {\n\treturn (\n\t\t<footer className='footer'>\n\t\t\t<a href='https://github.com/AlejoVE' target='_blank' rel='noreferrer'>\n\t\t\t\t<img\n\t\t\t\t\tsrc='https://user-images.githubusercontent.com/59319966/109864628-584d4e80-7c63-11eb-9f1a-4afed77758ce.png'\n\t\t\t\t\talt='github logo'\n\t\t\t\t></img>\n\t\t\t</a>\n\t\t\t<p>Alejandro Montilla ©2021</p>\n\t\t</footer>\n\t);\n};\n","import React from 'react';\nimport { CategoryContainer } from './CategoryContainer';\nimport { Footer } from './ui/Footer';\n\nexport const MainScreen = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className='main-container animate__animated animate__fadeIn'>\n\t\t\t\t<div className='header-container'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='header-img'\n\t\t\t\t\t\tsrc='https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_Black.png'\n\t\t\t\t\t\talt='Spotify logo'\n\t\t\t\t\t></img>\n\t\t\t\t</div>\n\t\t\t\t<CategoryContainer />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import { createContext } from 'react';\n\nexport const PlaylistsContext = createContext();\n","import React from 'react';\n\nexport const NotSelected = () => {\n\treturn (\n\t\t<div className='not-selected-container animate__animated animate__fadeIn'>\n\t\t\t<h2>Please select a Playlist</h2>\n\t\t\t<img\n\t\t\t\tsrc='https://www.freepnglogos.com/uploads/spotify-logo-png/file-spotify-logo-png-4.png'\n\t\t\t\talt='Spotify logo'\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","const base_URL = 'https://api.spotify.com/v1/browse/categories';\n\nexport const getPlaylistByCategory = async (token, category_id) => {\n\ttry {\n\t\tconst limit = 5;\n\n\t\tconst res = await fetch(\n\t\t\t`${base_URL}/${category_id}/playlists?limit=${limit}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\t//prettier-ignore\n\t\t\t\theaders: { \n                    'Authorization': `Bearer ${token}`,\n                \n                },\n\t\t\t}\n\t\t);\n\n\t\tconst { playlists } = await res.json();\n\n\t\tif (playlists === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn playlists.items;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import { createContext } from 'react';\n\nexport const SongsContext = createContext();\n","import React, { useContext } from 'react';\nimport { types } from '../../types/types';\nimport { PlaylistsContext } from '../../Playlist/PlaylistsContext';\n\nexport const Button = ({ value, id }) => {\n\tconst { playlistDispatch } = useContext(PlaylistsContext);\n\n\tconst handleClick = () => {\n\t\tconst action = {\n\t\t\ttype: types.setActivePlaylist,\n\t\t\tpayload: id,\n\t\t};\n\n\t\tplaylistDispatch(action);\n\t};\n\treturn (\n\t\t<button className='btn hvr-grow' onClick={handleClick}>\n\t\t\t{value}\n\t\t</button>\n\t);\n};\n","import React from 'react';\nimport { Button } from './ui/Button';\n\nexport const Playlist = ({ name, description, tracks, id }) => {\n\treturn (\n\t\t<li className='li-element'>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<em>Number of songs: {tracks.total}</em>\n\t\t\t</div>\n\t\t\t<Button value='See songs >>>' id={id} />\n\t\t</li>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { CategoryContext } from '../categories/CategoriesContext';\nimport { useFetchPlaylists } from '../hooks/useFetchPlaylists';\nimport { PlaylistsContext } from '../Playlist/PlaylistsContext';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\nimport { Playlist } from './Playlist';\n\nexport const PlaylistsContainer = ({ history }) => {\n\tconst { authState } = useContext(AuthContext);\n\tconst { playlistDispatch } = useContext(PlaylistsContext);\n\tconst { songsDispatch } = useContext(SongsContext);\n\tconst { token } = authState;\n\n\tconst { activeCategory } = useContext(CategoryContext);\n\tconst { activeCategory: myCategory } = activeCategory;\n\tconst { id, name } = myCategory;\n\n\tconst categoryId = localStorage.getItem('categoryId') || id;\n\tconst categoryName = localStorage.getItem('categoryName') || name;\n\n\tconst { playlists } = useFetchPlaylists(token, categoryId);\n\n\tconst goBack = () => {\n\t\tplaylistDispatch({\n\t\t\ttype: types.deactivateSelected,\n\t\t});\n\n\t\tsongsDispatch({\n\t\t\ttype: types.clearSongs,\n\t\t});\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<div className='playlists-container '>\n\t\t\t<div className='header'>\n\t\t\t\t<h2>{categoryName}</h2>\n\t\t\t</div>\n\t\t\t<ul className='list'>\n\t\t\t\t{\n\t\t\t\t\t// prettier/ignore\n\t\t\t\t\tplaylists.map(({ id, name, description, tracks }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Playlist\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\tdescription={description}\n\t\t\t\t\t\t\t\ttracks={tracks}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t\t<button className='goBack hvr-grow' onClick={goBack}>\n\t\t\t\t{'< Go back'}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n","import { useState, useEffect } from 'react';\nimport { getPlaylistByCategory } from '../helpers/getPlaylists';\n\nexport const useFetchPlaylists = (token, category_id) => {\n\tconst [state, setState] = useState({\n\t\tplaylists: [],\n\t});\n\n\tuseEffect(() => {\n\t\tgetPlaylistByCategory(token, category_id).then((data) => {\n\t\t\tsetState({\n\t\t\t\tplaylists: [...data],\n\t\t\t});\n\t\t});\n\t}, [category_id, token]);\n\n\treturn state;\n};\n","const base_url = `https://api.spotify.com/v1/playlists`;\n\nexport const getSongs = async (token, playlist_id) => {\n\tconst limit = 100;\n\n\ttry {\n\t\tconst res = await fetch(\n\t\t\t`${base_url}/${playlist_id}/tracks?limit=${limit}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\t//prettier-ignore\n\t\t\t\theaders: { 'Authorization': `Bearer ${token}`},\n\t\t\t}\n\t\t);\n\n\t\tconst { items } = await res.json();\n\n\t\tconst songs = [];\n\n\t\titems.forEach((song) => {\n\t\t\tconst { track } = song;\n\t\t\tconst { album, artists, id, name } = track;\n\n\t\t\tsongs.push({ album, artists, id, name });\n\t\t});\n\n\t\treturn songs;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { getSongs } from '../helpers/getSongs';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\n\nexport const useFetchSongs = (token, playlist_id) => {\n\tconst { songsDispatch } = useContext(SongsContext);\n\tconst [state, setState] = useState({\n\t\tsongs: [],\n\t});\n\n\tuseEffect(() => {\n\t\tgetSongs(token, playlist_id).then((data) => {\n\t\t\tsongsDispatch(setSongs(data));\n\t\t\tsetState({\n\t\t\t\tsongs: [...data],\n\t\t\t});\n\t\t});\n\t}, [playlist_id, songsDispatch, token]);\n\n\treturn state;\n};\n\nconst setSongs = (songs) => ({\n\ttype: types.setSongs,\n\tpayload: songs,\n});\n","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\n\nexport const SongList = ({ name, artists, album, id, index }) => {\n\tconst categoryName = localStorage.getItem('categoryName');\n\tconst { songsDispatch } = useContext(SongsContext);\n\tconst history = useHistory();\n\n\tconst setActiveSong = () => {\n\t\tsongsDispatch({\n\t\t\ttype: types.setActiveSong,\n\t\t\tpayload: {\n\t\t\t\tname,\n\t\t\t\tartists,\n\t\t\t\talbum,\n\t\t\t\tid,\n\t\t\t},\n\t\t});\n\n\t\thistory.replace(`/playlists/${categoryName}/song`);\n\t};\n\treturn (\n\t\t<li\n\t\t\tclassName='hvr-mine animate__animated animate__fadeIn'\n\t\t\tonClick={setActiveSong}\n\t\t>\n\t\t\t<Link\n\t\t\t\tto={`/playlists/${categoryName}/song`}\n\t\t\t>{`${index}.                ${name}`}</Link>\n\t\t</li>\n\t);\n};\n","import React, { useContext, useEffect } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { useFetchSongs } from '../hooks/useFetchSongs';\nimport { PlaylistsContext } from '../Playlist/PlaylistsContext';\nimport { SongsContext } from '../songs/SongsContext';\nimport { types } from '../types/types';\nimport { SongList } from './SongList';\n\nexport const SongsContainer = () => {\n\tconst { playlistsState } = useContext(PlaylistsContext);\n\tconst { activePlaylistId } = playlistsState;\n\n\tconst { authState } = useContext(AuthContext);\n\tconst { token } = authState;\n\n\tuseFetchSongs(token, activePlaylistId);\n\n\tconst { songsState, songsDispatch } = useContext(SongsContext);\n\tconst { songsIsLoading, songs } = songsState;\n\n\tuseEffect(() => {\n\t\tsongsDispatch({\n\t\t\ttype: types.setSongs,\n\t\t\tpayload: songs,\n\t\t});\n\t}, [activePlaylistId, songsDispatch]);\n\n\treturn (\n\t\t<div className='songs-container'>\n\t\t\t<ul>\n\t\t\t\t{!songsIsLoading ? (\n\t\t\t\t\tsongs.map(({ name, album, artists, id }, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SongList\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\talbum={album}\n\t\t\t\t\t\t\t\tartists={artists}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tindex={i + 1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<h2>Loading...</h2>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { PlaylistsContext } from '../Playlist/PlaylistsContext';\nimport { NotSelected } from './NotSelected';\nimport { PlaylistsContainer } from './PlaylistsContainer';\nimport { SongsContainer } from './SongsContainer';\n\nexport const PlaylistsScreen = ({ history }) => {\n\tconst { playlistsState } = useContext(PlaylistsContext);\n\tconst { isSelected } = playlistsState;\n\n\treturn (\n\t\t<>\n\t\t\t<div className='playlists-screen-container'>\n\t\t\t\t<PlaylistsContainer history={history} />\n\n\t\t\t\t{!isSelected ? <NotSelected /> : <SongsContainer />}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","const refresh_token = process.env.REACT_APP_REFRESH_TOKEN;\nconst basic_encoded = process.env.REACT_APP_ENCODED_CLIENT_ID_CLIENT_SECRET;\n\nexport const getAccessToken = async () => {\n\ttry {\n\t\tconst res = await fetch('https://accounts.spotify.com/api/token', {\n\t\t\tbody: `grant_type=refresh_token&refresh_token=${refresh_token}`,\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Basic ${basic_encoded}`,\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t});\n\t\tconst data = await res.json();\n\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import Swal from 'sweetalert2';\nimport { getAccessToken } from './getAccessToken';\n\nconst base_url = 'https://api.spotify.com/v1/playlists/4qhYOIILXPZGcwOAOd9Vt6/';\n\nexport const addSong = async (songId) => {\n\tconst data = await getAccessToken();\n\tconst { access_token } = data;\n\n\tconst encode = encodeURIComponent(`spotify:track:${songId}`);\n\ttry {\n\t\tawait fetch(`${base_url}tracks?uris=${encode}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t//prettier-ignore\n\t\t\t\t'Authorization': `Bearer ${access_token}`,\n\t\t\t},\n\t\t});\n\n\t\tSwal.fire('Good choice!', 'Check your playlist ;)', 'success');\n\t} catch (error) {\n\t\tSwal.fire('Error', 'Sorry, there was an error, try later', 'error');\n\t\tconsole.log(error);\n\t}\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SongsContext } from '../songs/SongsContext';\nimport { addSong } from '../helpers/addSong';\nimport { getArtistsString } from '../helpers/getArtistsString';\nimport { Footer } from './ui/Footer';\n\nexport const SongScreen = () => {\n\tconst history = useHistory();\n\tconst { songsState } = useContext(SongsContext);\n\tconst { activeSong } = songsState;\n\tconst { album, id, name, artists } = activeSong;\n\tconst { images, name: albumName } = album;\n\tconst { release_date } = album;\n\n\tconst categoryName = localStorage.getItem('categoryName');\n\tconsole.log('Album', album);\n\tconst songArtists = getArtistsString(artists);\n\tconsole.log(songArtists);\n\n\tconst goBack = () => {\n\t\thistory.push(`/playlists/${categoryName}`);\n\t};\n\n\tconst handleAddSong = () => {\n\t\taddSong(id);\n\t};\n\n\treturn (\n\t\t<div className='song-screen-container animate__animated animate__fadeInLeft animate__faster'>\n\t\t\t<div className='song-card-container '>\n\t\t\t\t<img src={`${images[0].url}`} alt='Album cover'></img>\n\t\t\t\t<div className='song-description-container'>\n\t\t\t\t\t<div className='song-header'>\n\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Artists: {songArtists}</li>\n\t\t\t\t\t\t<li>Album: {albumName}</li>\n\t\t\t\t\t\t<li>Release date: {release_date}</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<div className='buttons-container'>\n\t\t\t\t\t\t<button className='go-back hvr-grow' onClick={goBack}>\n\t\t\t\t\t\t\t{'< Go back'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='button hvr-grow' onClick={handleAddSong}>\n\t\t\t\t\t\t\tAdd song to Playlist\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n","export const getArtistsString = (artists) => {\n\tconst myArtistsArray = [];\n\n\tartists.forEach((artist) => myArtistsArray.push(artist.name));\n\tconst artistsString = myArtistsArray.join(', ');\n\treturn artistsString;\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { MainScreen } from '../components/MainScreen';\nimport { PlaylistsScreen } from '../components/PlaylistsScreen';\nimport { SongScreen } from '../components/SongScreen';\n\nexport const AppRouter = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/main' component={MainScreen} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/playlists/:name'\n\t\t\t\t\t\tcomponent={PlaylistsScreen}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/playlists/:name/song'\n\t\t\t\t\t\tcomponent={SongScreen}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path='/' component={MainScreen} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n","import { types } from '../types/types';\n\nexport const playlistsReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.getPlaylists:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaylists: [...action.payload],\n\t\t\t};\n\n\t\tcase types.setActivePlaylist:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactivePlaylistId: action.payload,\n\t\t\t\tisSelected: true,\n\t\t\t};\n\n\t\tcase types.deactivateSelected:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSelected: false,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { types } from '../types/types';\n\nexport const categoriesReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.setCategories:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.payload],\n\t\t\t};\n\n\t\tcase types.setActiveCategory:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveCategory: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.SetToken:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { types } from '../types/types';\n\nexport const songsReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.setSongs:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongs: [...action.payload],\n\t\t\t\tsongsIsLoading: false,\n\t\t\t};\n\n\t\tcase types.songsIsLoading:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongsIsLoading: true,\n\t\t\t};\n\n\t\tcase types.setActiveSong:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveSong: action.payload,\n\t\t\t};\n\n\t\tcase types.clearSongs:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsongs: [],\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React, { useReducer } from 'react';\n\nimport { AppRouter } from './router/AppRouter';\nimport { PlaylistsContext } from './Playlist/PlaylistsContext';\nimport { playlistsReducer } from './Playlist/playlistsReducer';\nimport { categoriesReducer } from './categories/categoriesReducer';\nimport { authReducer } from './auth/authReducer';\nimport { CategoryContext } from './categories/CategoriesContext';\nimport { AuthContext } from './auth/AuthContext';\nimport { songsReducer } from './songs/songsReducer';\nimport { SongsContext } from './songs/SongsContext';\n\nconst init = () => {\n\treturn { activePlaylistId: '', isSelected: false };\n};\n\nconst initCategories = () => {\n\treturn { activeCategory: '' };\n};\n\nconst initAuth = () => {\n\treturn { token: '' };\n};\n\nconst initSongs = () => {\n\treturn { songs: [], songsIsLoading: true, activeSong: {} };\n};\n\nexport const MusicApp = () => {\n\tconst [playlistsState, playlistDispatch] = useReducer(\n\t\tplaylistsReducer,\n\t\t{},\n\t\tinit\n\t);\n\tconst [activeCategory, categoriesDispatch] = useReducer(\n\t\tcategoriesReducer,\n\t\t{},\n\t\tinitCategories\n\t);\n\n\tconst [authState, authDispatch] = useReducer(authReducer, {}, initAuth);\n\n\tconst [songsState, songsDispatch] = useReducer(songsReducer, {}, initSongs);\n\treturn (\n\t\t<AuthContext.Provider value={{ authState, authDispatch }}>\n\t\t\t<SongsContext.Provider value={{ songsState, songsDispatch }}>\n\t\t\t\t<CategoryContext.Provider\n\t\t\t\t\tvalue={{ activeCategory, categoriesDispatch }}\n\t\t\t\t>\n\t\t\t\t\t<PlaylistsContext.Provider\n\t\t\t\t\t\tvalue={{ playlistsState, playlistDispatch }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AppRouter />\n\t\t\t\t\t</PlaylistsContext.Provider>\n\t\t\t\t</CategoryContext.Provider>\n\t\t\t</SongsContext.Provider>\n\t\t</AuthContext.Provider>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport { MusicApp } from './MusicApp';\n\nReactDOM.render(<MusicApp />, document.getElementById('root'));\n"],"sourceRoot":""}